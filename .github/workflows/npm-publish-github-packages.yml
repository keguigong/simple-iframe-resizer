# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/jod
      - name: Install Dependencies
        run: |
          corepack enable pnpm
          pnpm install
      - name: Build
        run: pnpm -r build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: packages/**/dist

  publish-gpr:
    name: Publish to GitHub Packages
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://npm.pkg.github.com/
      - name: Install Dependencies
        run: |
          corepack enable pnpm
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: packages
      - run: pnpm -r publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-npm:
    name: Publish to NPM
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
      - name: Install Dependencies
        run: |
          corepack enable pnpm
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: .
      - run: pnpm publish -r --no-git-checks --access=public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_CONFIG_PROVENANCE: true
